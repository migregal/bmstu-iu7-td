name: Go Integration

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      # - '**.go'
      - '**.*'
permissions:
  contents: read
jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: test
          POSTGRES_DB: markup2
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: test
          MONGO_INITDB_DATABASE: markup2
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: backend/go.mod

      - name: Build app
        run: make b-build

      - name: Start backend
        run: ./backend/out/markupapi.out --config ./backend/config.ci.yaml &

      - name: Run API Tests
        id: run-newman
        uses: anthonyvscode/newman-action@v1
        with:
          workingDir: ./backend/test/regress
          collection: MarkUP2.postman_collection.json
          environment: 'MarkUP2 DEV.postman_environment.json'
          reporters: cli

      - name: Output summary to console
        run: echo ${{ steps.run-newman.outputs.summary }}
