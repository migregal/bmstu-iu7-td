gzip_disable "msie6";
gzip_comp_level 2;
gzip_min_length 512;
gzip_proxied any;
gzip_types *;

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=neural_storage_cache:10m max_size=512m inactive=60m use_temp_path=off;

upstream markupapi-app {
    server docker-markupapi-dev-1:2000;
}

server {
    listen 443 http3 reuseport;
    listen 443 http2 ssl;

    # Sent when QUIC was used
    add_header QUIC-Status $http3;

    # Add Alt-Svc header to negotiate HTTP/3.
    add_header alt-svc 'h3=":443";ma=86400,h3-29=":443";ma=86400,h3-27=":443";ma=86400';

    more_set_headers 'Server: markaup2';

    # check
    # https://github.com/macbre/docker-nginx-http3/blob/master/ssl_common.conf
    # for full ssl conf

    ssl_certificate /etc/markup2/cert.pem;
    ssl_certificate_key /etc/markup2/key.pem;

    ssl_session_cache builtin:1000 shared:SSL:10m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # 0-RTT QUIC connection resumption
    ssl_early_data on;

    proxy_cache neural_storage_cache;
    proxy_cache_methods GET HEAD; # default value
    proxy_cache_background_update on;
    proxy_cache_lock on;
    proxy_cache_revalidate on;
    proxy_cache_min_uses 3;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        autoindex on;

        set $fallback_file /index.html;
        if ($http_accept !~ text/html) {
            set $fallback_file /null;
        }
        if ($uri ~ /$) {
            set $fallback_file /null;
        }
        try_files $uri $fallback_file;

        http2_push_preload on;
    }

    location /status {
        stub_status;
    }

    location /api/v1 {
        proxy_no_cache 1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://markupapi-app;
    }

    location /pages {
        proxy_no_cache 1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://markupapi-app/api/v1/files/get;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name markup2.com;

    return 301 https://$host$request_uri;
}
